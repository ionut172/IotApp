@model IotApp.Models.Device

@{
    ViewData["Title"] = "Edit Device";
}

<h2>Edit Device</h2>

<form asp-action="Create" class="container col-md-6">
    <div class="form-group animated fadeInUp">
        <label asp-for="Name" class="control-label">Device Name</label>
        <input asp-for="Name" class="form-control" placeholder="Enter device name" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group animated fadeInUp" style="animation-delay: 0.2s;">
        <label asp-for="Status" class="control-label">Device Status</label>
        <input asp-for="Status" class="form-control" placeholder="Enter device status" />
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    @if (ViewBag.Users != null && ((SelectList)ViewBag.Users).Any())
    {
        <div class="form-group animated fadeInUp" style="animation-delay: 0.4s;">
            <label hidden asp-for="UserId" class="control-label">Assigned User</label>
            <select asp-for="UserId" class="form-control" asp-items="@ViewBag.Users" hidden>
            </select>
            <span asp-validation-for="UserId" class="text-danger"></span>
        </div>
    }
    else
    {
        <p class="animated fadeInUp" style="animation-delay: 0.4s;">No users available to select.</p>
    }
    <div class="form-group text-center animated fadeInUp" style="animation-delay: 0.6s;">
        <button type="submit" class="btn btn-primary btn-lg">Create</button>
    </div>
</form>

<div>
    <a class="action-links" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
